[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "bioinformatics-tools"
version = "0.1.0"
description = "Bioinformatics tools for metagenomics and metabolomics analysis"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Sina Berk Golech", email = "your.email@example.com"}
]
maintainers = [
    {name = "Sina Berk Golech", email = "your.email@example.com"}
]
keywords = ["bioinformatics", "metagenomics", "metabolomics", "omics", "data-analysis"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.21.0",
    "pandas>=1.3.0",
    "scipy>=1.7.0",
    "biopython>=1.79",
    "matplotlib>=3.4.0",
    "seaborn>=0.11.0",
    "scikit-learn>=1.0.0",
    "jupyter>=1.0.0",
    "tqdm>=4.62.0",
    "click>=8.0.0",
    "pyyaml>=6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.2.0",
    "pytest-cov>=3.0.0",
    "black>=21.0.0",
    "flake8>=4.0.0",
    "mypy>=0.910",
    "pre-commit>=2.17.0",
]
docs = [
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.17.0",
]
test = [
    "pytest>=6.2.0",
    "pytest-cov>=3.0.0",
    "pytest-benchmark>=3.4.0",
    "memory-profiler>=0.60.0",
]
full = [
    "plotly>=5.0.0",
    "bokeh>=2.3.0",
    "umap-learn>=0.5.0",
    "hdbscan>=0.8.0",
    "statsmodels>=0.13.0",
    "pingouin>=0.5.0",
    "dask>=2021.10.0",
    "vaex>=4.13.0",
    "pymzml>=2.5.0",
    "dask>=2021.10.0",
    "boto3>=1.26.0",
    "fastapi>=0.78.0",
    "uvicorn>=0.17.0",
]

[project.urls]
Homepage = "https://github.com/SinaBerkGolech/SinaBerkGolech"
Documentation = "https://github.com/SinaBerkGolech/SinaBerkGolech#readme"
Repository = "https://github.com/SinaBerkGolech/SinaBerkGolech.git"
"Bug Tracker" = "https://github.com/SinaBerkGolech/SinaBerkGolech/issues"
"Research Collaboration" = "https://github.com/SinaBerkGolech/SinaBerkGolech/issues/new?template=research_collaboration.md"

[project.scripts]
bioinfo-tools = "bioinformatics_tools.cli:main"

[tool.setuptools]
packages = ["bioinformatics_tools"]

[tool.setuptools.package-data]
bioinformatics_tools = ["data/*", "config/*.yaml", "config/*.yml"]

[tool.setuptools_scm]
write_to = "bioinformatics_tools/_version.py"

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["bioinformatics_tools"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg",
    ".venv",
    "venv",
    ".tox",
    ".mypy_cache",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "numpy.*",
    "pandas.*",
    "scipy.*",
    "matplotlib.*",
    "seaborn.*",
    "sklearn.*",
    "jupyter.*",
    "IPython.*",
    "notebook.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "bioinformatics: marks tests as bioinformatics-specific",
    "metagenomics: marks tests as metagenomics-related",
    "metabolomics: marks tests as metabolomics-related",
]

[tool.coverage.run]
source = ["bioinformatics_tools"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "docs"]
skips = ["B101", "B601"]

[tool.safety]
output = "json" 